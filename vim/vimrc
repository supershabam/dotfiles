set nocompatible              " be iMproved, required
set backspace=2
filetype off                  " required

" ensure vundle is installed
if !file_readable(expand("$HOME/.vim/bundle/Vundle.vim/README.md"))
	echo "cloning down vundle..."
	echo ""
	silent !git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'fatih/vim-go'
Plugin 'Shougo/unite.vim'

" Enable goimports to automatically insert import paths instead of gofmt:
let g:go_fmt_command = "goimports"

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

:let mapleader = ","
nnoremap <Leader>f :Unite -start-insert file<CR>

" golang bindings
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>e <Plug>(go-rename)

syntax on
set relativenumber
set number
